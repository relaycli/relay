name: engine

on:
  push:
    branches: main
    paths:
      - 'relay/**'
      - 'cli/**'
      - 'pyproject.toml'
      - 'Makefile'
      - '.github/workflows/engine.yml'
  pull_request:
    branches: main
    paths:
      - 'relay/**'
      - 'cli/**'
      - 'pyproject.toml'
      - 'Makefile'
      - '.github/workflows/engine.yml'
  release:
    types: [published]

env:
  UV_VERSION: "0.7.19"
  PYTHON_VERSION: "3.11"


jobs:
  engine:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install the engine
        run: make install
      - name: Check that we can import the engine
        run: |
          python -c "import relay; print(relay.__version__)"
      - name: Run the CLI
        run: relay --help

  code-quality:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
      - name: Run ruff
        run: |
          make install-quality
          ruff --version
          make lint-check
      - name: Run ty
        run: make typing-check

  deps-sync:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - name: Run dependency sync checker
        run: make deps-check
  
  build:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - name: Build the package
        run: make build

  publish:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      # For PyPI's trusted publishing.
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - name: Publish to PyPI
        env:
          UV_PUBLISH_USERNAME: __token__
          UV_PUBLISH_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          make build && make publish
  
  verify-publish:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - name: Install package
        run: |
          uv pip install --system relaycli
          relay version
