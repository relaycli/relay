[build-system]
requires = ["uv_build>=0.7.19,<0.8.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "relay"
module-root = ""

[project]
name = "relay"
version = "0.1.0.dev0"
description = "open-source IMAP-native replacement for Gmail API"
requires-python = ">=3.11,<4.0"
license = { file = "LICENSE" }
authors = [{ name = "FranÃ§ois-Guillaume Fernandez", email = "support@relay.dev" }]
readme = "README.md"
keywords = ["cli", "imap", "smtp", "gmail", "outlook", "email", "inbox"]
dependencies = [
    "pydantic>=2.10.0,<3.0.0",
    "email-validator>=2.0.0,<3.0.0",
    "cryptography>=44.0.0,<46.0.0",
    "beautifulsoup4==4.12.3",
    "html2text==2025.4.15",
    "aioimaplib==2.0.1",
]

[project.optional-dependencies]
cli = [
    "typer>=0.16.0,<1.0.0",
]
quality = [
    "ruff==0.12.2",
    "ty==0.0.1-alpha.13",
    "pre-commit==4.2.0"
]
test = [
    "pytest>=8.3.3,<9.0.0",
    "pytest-asyncio>=0.17.0,<1.0.0",
    # https://github.com/geekan/MetaGPT/issues/1617
    "httpx>=0.23.0,<0.28.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-pretty>=1.0.0,<2.0.0"
]

[project.scripts]
relay = "cli.main:cli"

[project.urls]
homepage = "https://invoxflow.com"
repository = "https://github.com/frgfm/relay"
documentation = "https://docs.invoxflow.com"
issues = "https://github.com/frgfm/relay/issues"
releasenotes = "https://github.com/frgfm/relay/releases"
logo = "https://zugjkckdxhiamdlkxfmv.supabase.co/storage/v1/object/public/assets//logo_dark.svg"

[tool.coverage.run]
source = ["relay"]

[tool.ruff]
line-length = 120
target-version = "py311"
preview = true

[tool.ruff.lint]
select = [
    "F",  # pyflakes
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "I",  # isort
    "N",  # pep8-naming
    # "D101", "D103",  # pydocstyle missing docstring in public function/class
    "D201","D202","D207","D208","D214","D215","D300","D301","D417", "D419",  # pydocstyle
    "YTT",  # flake8-2020
    "ANN",  # flake8-annotations
    "ASYNC",  # flake8-async
    "S",  # flake8-bandit
    "BLE",  # flake8-blind-except
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "COM",  # flake8-commas
    "CPY",  # flake8-copyright
    "C4",  # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "PT",  # flake8-pytest-style
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "PERF",  # perflint
    "NPY",  # numpy
    "FURB",  # refurb
    "RUF",  # ruff specific
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise from
    "C901",  # too complex
    "F403",  # star imports
    "E731",  # lambda assignment
    "C416",  # list comprehension to list()
    "ANN002",  # missing type annotations on *args
    "ANN003",  # missing type annotations on **kwargs
    "COM812",  # trailing comma missing
    "ISC001",  # implicit string concatenation (handled by format)
]
exclude = [".git"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.isort]
known-first-party = ["tests", "relay"]
known-third-party = ["typer", "aioimaplib", "pydantic"]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["I001", "F401", "CPY001"]
"**/version.py" = ["CPY001"]
".github/**.py" = ["D", "T201", "ANN"]
"tests/**.py" = ["D103", "CPY001", "S101", "T201", "ANN001", "ANN201", "ANN202", "ARG001", "RUF029", "RUF030", "DTZ003"]
"cli/**.py" = ["ANN", "BLE001"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ty.environment]
python-version = "3.11"
python-platform = "linux"

[tool.ty.rules]
unresolved-import = "warn"
